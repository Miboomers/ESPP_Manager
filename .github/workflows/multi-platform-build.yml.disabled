name: Multi-Platform Build & Release

on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch:
    inputs:
      create_release:
        description: 'Create GitHub Release'
        required: true
        default: 'true'
        type: boolean

jobs:
  get-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
    - uses: actions/checkout@v4
    - id: version
      run: |
        VERSION=$(grep '^version:' pubspec.yaml | cut -d ' ' -f 2)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Detected version: $VERSION"

  build-windows:
    needs: get-version
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.0'
        channel: 'stable'
        
    - name: Enable Windows Desktop & Install deps
      run: |
        flutter config --enable-windows-desktop
        flutter pub get
        
    - name: Build Windows
      run: flutter build windows --release
      
    - name: Package Windows Build
      shell: powershell
      run: |
        $version = "${{ needs.get-version.outputs.version }}"
        $date = Get-Date -Format "yyyyMMdd_HHmm"
        $distName = "ESPP_Manager_Windows_v${version}_${date}"
        
        New-Item -ItemType Directory -Path "dist" -Force
        Copy-Item -Path "build\windows\x64\runner\Release" -Destination "dist\$distName" -Recurse
        
        # Installation guide
        @"
# ESPP Manager für Windows

## Installation
1. Ordner an gewünschten Ort kopieren (z.B. C:\Programme\ESPP_Manager)
2. espp_manager.exe ausführen
3. Bei Windows Defender Warnung: 'Weitere Informationen' → 'Trotzdem ausführen'

## Features  
✅ ESPP-Transaktionen verwalten
✅ Deutsche Steuerberechnungen
✅ PDF-Berichte für Finanzamt
✅ Cloud-Sync mit macOS/iOS
✅ Fidelity CSV Import
✅ AES-256 Verschlüsselung

Version: $version | Build: $date
"@ | Out-File -FilePath "dist\$distName\README.txt" -Encoding UTF8

        Compress-Archive -Path "dist\$distName" -DestinationPath "dist\ESPP_Manager_Windows_v$version.zip"
        
    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: dist/*.zip

  build-web:
    needs: get-version
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.0'
        channel: 'stable'
        
    - name: Enable Web & Build
      run: |
        flutter config --enable-web
        flutter pub get
        flutter build web --release --web-renderer html
        
    - name: Package Web Build
      run: |
        VERSION="${{ needs.get-version.outputs.version }}"
        DATE=$(date +%Y%m%d_%H%M)
        DIST_NAME="ESPP_Manager_Web_v${VERSION}_${DATE}"
        
        mkdir -p dist
        cp -r build/web "dist/$DIST_NAME"
        
        # Add deployment instructions
        cat > "dist/$DIST_NAME/DEPLOYMENT.md" << EOF
# ESPP Manager Web Deployment

## Local Testing
1. Serve this folder with any web server
2. Python: \`python -m http.server 8000\`
3. Open http://localhost:8000

## Production Deployment
- Upload entire folder to web hosting
- Configure HTTPS (required for secure storage)
- Set proper CORS headers for Firebase

Version: $VERSION | Build: $DATE
EOF
        
        cd dist && zip -r "ESPP_Manager_Web_v${VERSION}.zip" "$DIST_NAME"
        
    - name: Upload Web Artifact
      uses: actions/upload-artifact@v4  
      with:
        name: web-build
        path: dist/*.zip

  build-macos:
    needs: get-version
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.0'
        channel: 'stable'
        
    - name: Enable macOS Desktop & Build
      run: |
        flutter config --enable-macos-desktop
        flutter pub get
        cd macos && pod install && cd ..
        flutter build macos --release
        
    - name: Package macOS Build
      run: |
        VERSION="${{ needs.get-version.outputs.version }}"
        DATE=$(date +%Y%m%d_%H%M)
        DIST_NAME="ESPP_Manager_macOS_v${VERSION}_${DATE}"
        
        mkdir -p dist
        cp -r "build/macos/Build/Products/Release/ESPP Manager.app" "dist/$DIST_NAME.app"
        
        # Create DMG (optional - requires additional setup)
        # hdiutil create -format UDZO -srcfolder "dist/$DIST_NAME.app" "dist/ESPP_Manager_macOS_v${VERSION}.dmg"
        
        # For now, create ZIP
        cd dist && zip -r "ESPP_Manager_macOS_v${VERSION}.zip" "$DIST_NAME.app"
        
    - name: Upload macOS Artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-build  
        path: dist/*.zip

  create-release:
    if: startsWith(github.ref, 'refs/tags/') || (github.event_name == 'workflow_dispatch' && inputs.create_release == true)
    needs: [get-version, build-windows, build-web, build-macos]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: release-artifacts
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name || format('v{0}', needs.get-version.outputs.version) }}
        name: ESPP Manager v${{ needs.get-version.outputs.version }}
        body: |
          # 🎉 ESPP Manager v${{ needs.get-version.outputs.version }}
          
          Professional Employee Stock Purchase Plan management tool with German tax calculations.
          
          ## 🆕 Key Features
          - 📊 **ESPP Transaction Tracking** - Manage purchases and sales
          - 🇩🇪 **German Tax Calculations** - Lohnsteuer + Kapitalertragsteuer  
          - 📄 **PDF Tax Reports** - Ready for Finanzamt submission
          - ☁️ **Cloud Synchronization** - Sync across all devices
          - 📈 **Fidelity CSV Import** - Automatic transaction import
          - 🔒 **AES-256 Encryption** - Bank-grade security
          
          ## 📦 Downloads
          
          ### Windows 🪟
          - **Recommended**: Download `ESPP_Manager_Windows_*.zip`
          - Extract and run `espp_manager.exe`
          - For security warning: "More info" → "Run anyway"
          
          ### macOS 🍎
          - **Download**: `ESPP_Manager_macOS_*.zip`  
          - Extract and move to Applications folder
          - Right-click → Open (first time only)
          
          ### Web Browser 🌐
          - **Download**: `ESPP_Manager_Web_*.zip`
          - Host on any web server or run locally
          - Requires HTTPS for full functionality
          
          ## 🔧 System Requirements
          - **Windows**: Windows 10/11 (64-bit)
          - **macOS**: macOS 11.0+ (Big Sur or later)
          - **Web**: Modern browser with JavaScript enabled
          
          ## 📚 Documentation
          - **Installation guides** included in each package
          - **User manual**: Check GitHub Wiki
          - **Support**: Create GitHub Issues
          
          ## 🛡️ Security & Privacy
          - All financial data encrypted with AES-256
          - Cloud sync via Firebase (optional)
          - No data collection or telemetry
          - PIN protection with optional biometrics
          
          ---
          
          **Build Info**: Flutter 3.32.0 | $(date -u +"%Y-%m-%d %H:%M UTC")
        files: release-artifacts/**/*.zip
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}